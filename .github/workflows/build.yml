name: Build and deploy

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'src/**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -e .[dev]

      - name: Regenerate the manifest
        run: python src/operetta_compose/dev/create_manifest.py

      - name: Check if manifest has changed
        run: |
          if [ -n "$(git diff --exit-code ./src/operetta_compose/__FRACTAL_MANIFEST__.json)" ]; then
          echo "__FRACTAL_MANIFEST__.json has changed. Please run 'python src/operetta_compose/dev/create_manifest.py' and commit the changes."
            exit 1
          else
            echo "__FRACTAL_MANIFEST__.json has not changed."
          fi

      - name: Run tests
        run: |
          pytest


  pypi-publish:
    if: success() && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - test-deploy
    permissions:
      id-token: write
      # This permission allows writing releases
      contents: write
    environment:
      name: pypi
      url: https://pypi.org/p/operetta-compose
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build package
        run: |
          pip install build
          python -m build

      - name: Upload dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: './dist/*'
